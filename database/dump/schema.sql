CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "sessions" ("id" varchar not null, "user_id" integer, "ip_address" varchar, "user_agent" text, "payload" text not null, "last_activity" integer not null, primary key ("id"));
CREATE INDEX "sessions_user_id_index" on "sessions" ("user_id");
CREATE INDEX "sessions_last_activity_index" on "sessions" ("last_activity");
CREATE TABLE IF NOT EXISTS "cache" ("key" varchar not null, "value" text not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "cache_locks" ("key" varchar not null, "owner" varchar not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "jobs" ("id" integer primary key autoincrement not null, "queue" varchar not null, "payload" text not null, "attempts" integer not null, "reserved_at" integer, "available_at" integer not null, "created_at" integer not null);
CREATE INDEX "jobs_queue_index" on "jobs" ("queue");
CREATE TABLE IF NOT EXISTS "job_batches" ("id" varchar not null, "name" varchar not null, "total_jobs" integer not null, "pending_jobs" integer not null, "failed_jobs" integer not null, "failed_job_ids" text not null, "options" text, "cancelled_at" integer, "created_at" integer not null, "finished_at" integer, primary key ("id"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "permissions" ("id" integer primary key autoincrement not null, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "permissions_name_guard_name_unique" on "permissions" ("name", "guard_name");
CREATE TABLE IF NOT EXISTS "roles" ("id" integer primary key autoincrement not null, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "roles_name_guard_name_unique" on "roles" ("name", "guard_name");
CREATE TABLE IF NOT EXISTS "model_has_permissions" ("permission_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, primary key ("permission_id", "model_id", "model_type"));
CREATE INDEX "model_has_permissions_model_id_model_type_index" on "model_has_permissions" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "model_has_roles" ("role_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("role_id", "model_id", "model_type"));
CREATE INDEX "model_has_roles_model_id_model_type_index" on "model_has_roles" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "role_has_permissions" ("permission_id" integer not null, "role_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("permission_id", "role_id"));
CREATE TABLE IF NOT EXISTS "wil_provinces" ("id" integer primary key autoincrement not null, "name" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "wil_cities" ("id" integer primary key autoincrement not null, "name" varchar not null, "wil_province_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("wil_province_id") references "wil_provinces"("id"));
CREATE TABLE IF NOT EXISTS "wil_districts" ("id" integer primary key autoincrement not null, "name" varchar not null, "wil_city_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("wil_city_id") references "wil_cities"("id"));
CREATE TABLE IF NOT EXISTS "wil_subdistricts" ("id" integer primary key autoincrement not null, "name" varchar not null, "wil_district_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("wil_district_id") references "wil_districts"("id"));
CREATE TABLE IF NOT EXISTS "fix_education_levels" ("id" varchar not null, "name" varchar not null, "num_code" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_class_grades" ("id" varchar not null, "fix_education_level_id" varchar not null, "name" varchar not null, "alias" varchar not null, "order" integer not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("fix_education_level_id") references "fix_education_levels"("id"));
CREATE TABLE IF NOT EXISTS "fix_employment_statuses" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_employment_types" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_entry_statuses" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_exit_statuses" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_family_statuses" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_family_relations" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_institutions" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_marital_statuses" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_period_types" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_professions" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_religions" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_salary_sources" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_stifins" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "fix_user_types" ("id" varchar not null, "name" varchar not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE TABLE IF NOT EXISTS "ref_branches" ("id" varchar not null, "name" varchar not null, "num_code" varchar not null, "alpha_code" varchar not null, "address" text not null, "wil_province_id" integer not null, "wil_city_id" integer not null, "wil_district_id" integer not null, "wil_subdistrict_id" integer not null, "phone" varchar not null, "email" varchar not null, "is_active" tinyint(1) not null, "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("wil_province_id") references "wil_provinces"("id"), foreign key("wil_city_id") references "wil_cities"("id"), foreign key("wil_district_id") references "wil_districts"("id"), foreign key("wil_subdistrict_id") references "wil_subdistricts"("id"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "ref_schools" ("id" varchar not null, "ref_branch_id" varchar not null, "fix_education_level_id" varchar not null, "name" varchar not null, "num_code" varchar not null, "npsn" varchar, "same_address_as_branch" tinyint(1) not null default '1', "address" text not null, "wil_province_id" integer not null, "wil_city_id" integer not null, "wil_district_id" integer not null, "wil_subdistrict_id" integer not null, "phone" varchar, "email" varchar, "is_active" tinyint(1) not null default '1', "info" text, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("ref_branch_id") references "ref_branches"("id"), foreign key("fix_education_level_id") references "fix_education_levels"("id"), foreign key("wil_province_id") references "wil_provinces"("id"), foreign key("wil_city_id") references "wil_cities"("id"), foreign key("wil_district_id") references "wil_districts"("id"), foreign key("wil_subdistrict_id") references "wil_subdistricts"("id"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "ref_school_origins" ("id" varchar not null, "fix_education_level_id" varchar not null, "name" varchar not null, "wil_province_id" integer not null, "wil_city_id" integer not null, "wil_district_id" integer not null, "wil_subdistrict_id" integer, "contact_person" varchar, "phone" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("fix_education_level_id") references "fix_education_levels"("id"), foreign key("wil_province_id") references "wil_provinces"("id"), foreign key("wil_city_id") references "wil_cities"("id"), foreign key("wil_district_id") references "wil_districts"("id"), foreign key("wil_subdistrict_id") references "wil_subdistricts"("id"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "prof_employees" ("id" varchar not null, "ref_branch_id" varchar not null, "nokk" varchar, "nik" varchar not null, "niy" varchar, "nuptk" varchar, "front_title" varchar, "full_name" varchar not null, "back_title" varchar, "nickname" varchar, "birthplace" varchar not null, "birthdate" date not null, "gender" varchar not null, "fix_religion_id" varchar not null, "fix_stifin_id" varchar not null, "nationality" varchar not null, "address" text not null, "wil_province_id" integer, "wil_city_id" integer, "wil_district_id" integer, "wil_subdistrict_id" integer, "phone" varchar, "email" varchar, "work_start_date" date, "work_end_date" date, "fix_employment_type_id" varchar not null, "fix_employment_status_id" varchar not null, "profile_picture" varchar, "avatar" varchar, "is_active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("ref_branch_id") references "ref_branches"("id"), foreign key("fix_religion_id") references "fix_religions"("id"), foreign key("fix_stifin_id") references "fix_stifins"("id"), foreign key("wil_province_id") references "wil_provinces"("id"), foreign key("wil_city_id") references "wil_cities"("id"), foreign key("wil_district_id") references "wil_districts"("id"), foreign key("wil_subdistrict_id") references "wil_subdistricts"("id"), foreign key("fix_employment_type_id") references "fix_employment_types"("id"), foreign key("fix_employment_status_id") references "fix_employment_statuses"("id"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "prof_families" ("id" varchar not null, "nokk" varchar not null, "father_name" varchar not null, "father_nik" varchar not null, "father_birthplace" varchar not null, "father_birthdate" date not null, "father_education_level_id" varchar not null, "father_profession_id" varchar not null, "father_profession_detail" varchar, "father_income" integer, "mother_name" varchar not null, "mother_nik" varchar not null, "mother_birthplace" varchar not null, "mother_birthdate" date not null, "mother_education_level_id" varchar not null, "mother_profession_id" varchar not null, "mother_profession_detail" varchar, "mother_income" integer, "number_of_children" integer, "address" text not null, "wil_province_id" integer, "wil_city_id" integer, "wil_district_id" integer, "wil_subdistrict_id" integer, "phone" varchar, "email" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("father_education_level_id") references "fix_education_levels"("id"), foreign key("father_profession_id") references "fix_professions"("id"), foreign key("mother_education_level_id") references "fix_education_levels"("id"), foreign key("mother_profession_id") references "fix_professions"("id"), foreign key("wil_province_id") references "wil_provinces"("id"), foreign key("wil_city_id") references "wil_cities"("id"), foreign key("wil_district_id") references "wil_districts"("id"), foreign key("wil_subdistrict_id") references "wil_subdistricts"("id"), primary key ("id"));
CREATE UNIQUE INDEX "prof_families_nokk_unique" on "prof_families" ("nokk");
CREATE TABLE IF NOT EXISTS "prof_students" ("id" varchar not null, "ref_branch_id" varchar not null, "ref_school_id" varchar not null, "ref_school_origin_id" varchar, "prof_family_id" varchar, "nis" varchar not null, "nik" varchar not null, "no_kk" varchar not null, "nisn" varchar, "no_ujian" varchar, "no_kip" varchar, "no_va_1" varchar, "no_va_2" varchar, "no_va_3" varchar, "fullname" varchar not null, "nickname" varchar not null, "birthplace" varchar not null, "birthdate" date not null, "gender" varchar not null, "fix_religion_id" varchar not null, "fix_stifin_id" varchar not null, "nationality" varchar not null, "entry_date" date, "fix_entry_status_id" varchar, "exit_date" date, "fix_exit_status_id" varchar, "is_special_needs" tinyint(1) not null default '0', "special_needs" varchar, "is_active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("ref_branch_id") references "ref_branches"("id"), foreign key("ref_school_id") references "ref_schools"("id"), foreign key("ref_school_origin_id") references "ref_school_origins"("id"), foreign key("prof_family_id") references "prof_families"("id"), foreign key("fix_religion_id") references "fix_religions"("id"), foreign key("fix_stifin_id") references "fix_stifins"("id"), primary key ("id"));
CREATE TABLE IF NOT EXISTS "prof_family_members" ("id" varchar not null, "prof_family_id" varchar not null, "name" varchar not null, "fix_family_relation_id" varchar not null, "fix_family_status_id" varchar not null, "prof_student_id" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("prof_family_id") references "prof_families"("id"), foreign key("fix_family_relation_id") references "fix_family_relations"("id"), foreign key("fix_family_status_id") references "fix_family_statuses"("id"), foreign key("prof_student_id") references "prof_students"("id"), primary key ("id"));
